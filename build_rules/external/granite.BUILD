cc_library(
    name = "granite_base",
    srcs = [
        "util/aligned_alloc.cpp",
        "util/timer.cpp",
        "vulkan/buffer.cpp",
        "vulkan/buffer_pool.cpp",
        "vulkan/command_buffer.cpp",
        "vulkan/command_pool.cpp",
        "vulkan/context.cpp",
        "vulkan/cookie.cpp",
        "vulkan/descriptor_set.cpp",
        "vulkan/device.cpp",
        "vulkan/event_manager.cpp",
        "vulkan/fence.cpp",
        "vulkan/fence_manager.cpp",
        "vulkan/image.cpp",
        "vulkan/memory_allocator.cpp",
        "vulkan/pipeline_event.cpp",
        "vulkan/query_pool.cpp",
        "vulkan/render_pass.cpp",
        "vulkan/sampler.cpp",
        "vulkan/semaphore.cpp",
        "vulkan/semaphore_manager.cpp",
        "vulkan/shader.cpp",
        "vulkan/texture_format.cpp",
        "vulkan/wsi.cpp",
        "vulkan/wsi_timing.cpp",
    ],
    hdrs = [
        "application/application.hpp",
        "application/application_wsi.hpp",
        "util/aligned_alloc.hpp",
        "util/array_view.hpp",
        "util/async_object_sink.hpp",
        "util/enum_cast.hpp",
        "util/hash.hpp",
        "util/intrusive.hpp",
        "util/intrusive_hash_map.hpp",
        "util/intrusive_list.hpp",
        "util/object_pool.hpp",
        "util/read_write_lock.hpp",
        "util/small_vector.hpp",
        "util/stack_allocator.hpp",
        "util/temporary_hashmap.hpp",
        "util/timer.hpp",
        "util/unstable_remove_if.hpp",
        "util/util.hpp",
        "util/variant.hpp",
        "util/volatile_source.hpp",
        "vulkan/buffer.hpp",
        "vulkan/buffer_pool.hpp",
        "vulkan/command_buffer.hpp",
        "vulkan/command_pool.hpp",
        "vulkan/context.hpp",
        "vulkan/cookie.hpp",
        "vulkan/descriptor_set.hpp",
        "vulkan/device.hpp",
        "vulkan/event_manager.hpp",
        "vulkan/fence.hpp",
        "vulkan/fence_manager.hpp",
        "vulkan/format.hpp",
        "vulkan/image.hpp",
        "vulkan/limits.hpp",
        "vulkan/memory_allocator.hpp",
        "vulkan/pipeline_event.hpp",
        "vulkan/query_pool.hpp",
        "vulkan/quirks.hpp",
        "vulkan/render_pass.hpp",
        "vulkan/sampler.hpp",
        "vulkan/semaphore.hpp",
        "vulkan/semaphore_manager.hpp",
        "vulkan/shader.hpp",
        "vulkan/texture_format.hpp",
        "vulkan/type_to_string.hpp",
        "vulkan/vulkan_common.hpp",
        "vulkan/vulkan_headers.hpp",
        "vulkan/wsi.hpp",
        "vulkan/wsi_timing.hpp",
    ],
    include_prefix = "granite",
    includes = [
        ".",
        "util",
        "vulkan",
    ],
    linkopts = select({
        "@bazel_tools//src/conditions:windows": ["-DEFAULTLIB:ws2_32.lib"],
        "//conditions:default": [
            "-pthread",
            "dl",
            "m",
        ],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "@spirv_cross//:spirv_cross_core",
        "@volk",
    ],
)

cc_library(
    name = "granite",
    srcs = [
        "application/application.hpp",
        "application/application_wsi.hpp",
        "util/aligned_alloc.cpp",
        "util/aligned_alloc.hpp",
        "util/array_view.hpp",
        "util/async_object_sink.hpp",
        "util/enum_cast.hpp",
        "util/hash.hpp",
        "util/intrusive.hpp",
        "util/intrusive_hash_map.hpp",
        "util/intrusive_list.hpp",
        "util/object_pool.hpp",
        "util/read_write_lock.hpp",
        "util/small_vector.hpp",
        "util/stack_allocator.hpp",
        "util/temporary_hashmap.hpp",
        "util/timer.cpp",
        "util/timer.hpp",
        "util/unstable_remove_if.hpp",
        "util/util.hpp",
        "util/variant.hpp",
        "util/volatile_source.hpp",
        "vulkan/buffer.cpp",
        "vulkan/buffer.hpp",
        "vulkan/buffer_pool.cpp",
        "vulkan/buffer_pool.hpp",
        "vulkan/command_buffer.cpp",
        "vulkan/command_buffer.hpp",
        "vulkan/command_pool.cpp",
        "vulkan/command_pool.hpp",
        "vulkan/context.cpp",
        "vulkan/context.hpp",
        "vulkan/cookie.cpp",
        "vulkan/cookie.hpp",
        "vulkan/descriptor_set.cpp",
        "vulkan/descriptor_set.hpp",
        "vulkan/device.cpp",
        "vulkan/device.hpp",
        "vulkan/event_manager.cpp",
        "vulkan/event_manager.hpp",
        "vulkan/fence.cpp",
        "vulkan/fence.hpp",
        "vulkan/fence_manager.cpp",
        "vulkan/fence_manager.hpp",
        "vulkan/format.hpp",
        "vulkan/image.cpp",
        "vulkan/image.hpp",
        "vulkan/limits.hpp",
        "vulkan/managers/shader_manager.cpp",
        "vulkan/managers/shader_manager.hpp",
        "vulkan/managers/texture_manager.cpp",
        "vulkan/managers/texture_manager.hpp",
        "vulkan/memory_allocator.cpp",
        "vulkan/memory_allocator.hpp",
        "vulkan/pipeline_event.cpp",
        "vulkan/pipeline_event.hpp",
        "vulkan/query_pool.cpp",
        "vulkan/query_pool.hpp",
        "vulkan/quirks.hpp",
        "vulkan/render_pass.cpp",
        "vulkan/render_pass.hpp",
        "vulkan/sampler.cpp",
        "vulkan/sampler.hpp",
        "vulkan/semaphore.cpp",
        "vulkan/semaphore.hpp",
        "vulkan/semaphore_manager.cpp",
        "vulkan/semaphore_manager.hpp",
        "vulkan/shader.cpp",
        "vulkan/shader.hpp",
        "vulkan/texture_format.cpp",
        "vulkan/texture_format.hpp",
        "vulkan/type_to_string.hpp",
        "vulkan/vulkan_common.hpp",
        "vulkan/vulkan_headers.hpp",
        "vulkan/wsi.cpp",
        "vulkan/wsi.hpp",
        "vulkan/wsi_timing.cpp",
        "vulkan/wsi_timing.hpp",
    ] + select({
        "@bazel_tools//src/conditions:windows": [
            "application/input/xinput_windows.cpp",
            "application/input/xinput_windows.hpp",
        ],
        "//conditions:default": [],
    }),
    defines = [],
    includes = [
        "util",
        "vulkan",
    ],
    visibility = ["//visibility:public"],
)
